services:
  # API Backend (.NET 8)
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    working_dir: /app
    ports:
      - "${SIGAV_API_PORT:-5000}:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Frontend (Angular + Node 22)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "${SIGAV_FRONT_PORT:-4200}:80"
    depends_on:
      - api

  # PostgreSQL 17
  postgres:
    image: postgres:17
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-sigav}
      - POSTGRES_USER=${POSTGRES_USER:-sigav_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-sigav_password}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-sigav_user} -d ${POSTGRES_DB:-sigav}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis 8
  redis:
    image: redis:8
    ports:
      - "${REDIS_PORT:-6379}:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin (PostgreSQL Administration)
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL:-admin@sigav.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD:-admin123}
      - PGADMIN_CONFIG_SERVER_MODE=False
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:
