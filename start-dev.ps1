#!/usr/bin/env pwsh

# Script para arrancar el entorno de desarrollo SIGAV
# Uso: .\start-dev.ps1

Write-Host "üöÄ Iniciando entorno de desarrollo SIGAV..." -ForegroundColor Green

# Verificar que Docker est√© ejecut√°ndose
try {
    docker version | Out-Null
} catch {
    Write-Host "‚ùå Docker no est√° ejecut√°ndose. Por favor, inicia Docker Desktop." -ForegroundColor Red
    exit 1
}

# Verificar que docker-compose est√© disponible
try {
    docker compose version | Out-Null
} catch {
    Write-Host "‚ùå Docker Compose no est√° disponible." -ForegroundColor Red
    exit 1
}

# Parar contenedores existentes si los hay
Write-Host "üõë Deteniendo contenedores existentes..." -ForegroundColor Yellow
docker compose -f docker-compose.dev.yml down

# Construir las im√°genes si no existen o han cambiado
Write-Host "üî® Construyendo im√°genes..." -ForegroundColor Yellow
docker compose -f docker-compose.dev.yml build

# Arrancar los servicios con watch mode
Write-Host "‚ñ∂Ô∏è  Arrancando servicios con hot-reload..." -ForegroundColor Green
Write-Host "üìù Los cambios en el c√≥digo se reflejar√°n autom√°ticamente" -ForegroundColor Cyan
Write-Host "" -ForegroundColor White

# Mostrar informaci√≥n de los puertos
Write-Host "üåê Servicios disponibles:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Frontend (Angular): http://localhost:4200" -ForegroundColor White
Write-Host "   ‚Ä¢ Backend API (.NET): http://localhost:5000" -ForegroundColor White
Write-Host "   ‚Ä¢ Swagger UI: http://localhost:5000/swagger" -ForegroundColor White
Write-Host "   ‚Ä¢ PostgreSQL: localhost:5432" -ForegroundColor White
Write-Host "   ‚Ä¢ Redis: localhost:6379" -ForegroundColor White
Write-Host "" -ForegroundColor White

Write-Host "üí° Para detener los servicios, presiona Ctrl+C" -ForegroundColor Yellow
Write-Host "üí° Para ver logs espec√≠ficos: docker compose -f docker-compose.dev.yml logs -f [servicio]" -ForegroundColor Yellow

# Arrancar con watch mode
docker compose -f docker-compose.dev.yml up --watch
